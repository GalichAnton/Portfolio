{"version":3,"file":"static/js/349.d9011259.chunk.js","mappings":"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","sources":["Pages/Layouts/PageLayout.tsx","components/Skills/Container.tsx","components/Skills/Section.tsx","components/Skills/SkillCard.tsx","Pages/TechsPage/TechsPage.tsx","components/Animation/PageSlideFade.tsx","data/carrer.ts","style/colors.ts"],"sourcesContent":["import React, { Fragment, ReactNode } from \"react\";\nimport { motion } from \"framer-motion\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst variants = {\n  hidden: { opacity: 0, x: -200, y: 0 },\n  enter: { opacity: 1, x: 0, y: 0 },\n  exit: { opacity: 0, x: 0, y: -100 },\n};\n\nconst PageLayout = ({ children }: Props): JSX.Element => (\n  <Fragment>\n    <motion.main\n      initial=\"hidden\"\n      animate=\"enter\"\n      exit=\"exit\"\n      variants={variants}\n      transition={{ type: \"linear\" }}\n    >\n      {children}\n    </motion.main>\n  </Fragment>\n);\n\nexport default PageLayout;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport const Container = (props: any) => (\n  <Box\n    textAlign=\"center\"\n    fontSize=\"xl\"\n    w={[\"90%\", \"85%\", \"80%\"]}\n    maxW={800}\n    mx=\"auto\"\n    {...props}\n  />\n);\n\nexport default Container;\n","import React from \"react\";\nimport { Center } from \"@chakra-ui/react\";\nimport Container from \"./Container\";\n\nconst Section = (props: any) => {\n  const { full, children, ...rest } = props;\n  return (\n    <Center as=\"section\" {...rest} w=\"100%\">\n      {full ? children : <Container>{children}</Container>}\n    </Center>\n  );\n};\n\nexport default Section;\n","import React, { FC } from \"react\";\nimport {\n  HStack,\n  VStack,\n  Text,\n  useColorModeValue,\n  Box,\n  Link,\n  Image,\n} from \"@chakra-ui/react\";\nimport { MotionBox } from \"../Animation/Motion/Motion\";\nimport { item } from \"../Animation/PageSlideFade\";\nimport { useLinkColor } from \"../../style/colors\";\ninterface ISkillCardProps {\n  name: string;\n  image: string;\n  link: string;\n  description: string;\n}\nconst SkillCard: FC<ISkillCardProps> = ({ name, image, link, description }) => {\n  const linkColor = useLinkColor();\n\n  return (\n    <MotionBox variants={item}>\n      <MotionBox whileHover={{ y: -5 }}>\n        <Box>\n          <Link isExternal href={link} target={\"_blank\"}>\n            <HStack\n              p={4}\n              bg={useColorModeValue(\"white\", \"gray.800\")}\n              rounded=\"xl\"\n              borderWidth=\"1px\"\n              borderColor={useColorModeValue(\"gray.100\", \"gray.700\")}\n              w=\"100%\"\n              textAlign=\"left\"\n              align=\"start\"\n              spacing={4}\n              _hover={{ shadow: \"md\" }}\n            >\n              <Box\n                rounded=\"lg\"\n                p={2}\n                position=\"relative\"\n                overflow=\"hidden\"\n                lineHeight={0}\n                boxShadow=\"inset 0 0 1px 1px rgba(0, 0, 0, 0.015)\"\n              >\n                <Box\n                  position=\"absolute\"\n                  top={0}\n                  bottom={0}\n                  left={0}\n                  right={0}\n                  opacity={0.25}\n                ></Box>\n\n                <Image src={image} height={26} width={26} rounded=\"md\" />\n              </Box>\n              <VStack\n                align=\"start\"\n                justify=\"flex-start\"\n                spacing={1}\n                maxW=\"lg\"\n                h=\"100%\"\n              >\n                <VStack spacing={0} align=\"start\" flexGrow={1}>\n                  <Text\n                    fontWeight=\"bold\"\n                    fontSize=\"md\"\n                    noOfLines={2}\n                    color={linkColor}\n                  >\n                    {name}\n                  </Text>\n                  <Text\n                    fontSize=\"sm\"\n                    color={useColorModeValue(\"gray.500\", \"gray.200\")}\n                  >\n                    {description}\n                  </Text>\n                </VStack>\n              </VStack>\n            </HStack>\n          </Link>\n        </Box>\n      </MotionBox>\n    </MotionBox>\n  );\n};\n\nexport default SkillCard;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Icon,\n  VStack,\n  HStack,\n  Text,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  useColorModeValue,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport Section from \"../../components/Skills/Section\";\nimport { AiTwotoneThunderbolt, AiOutlineCloudServer } from \"react-icons/ai\";\nimport { BiDesktop } from \"react-icons/bi\";\nimport { GiSpiderWeb } from \"react-icons/gi\";\nimport SkillCard from \"../../components/Skills/SkillCard\";\nimport { ISkill, skillsArray } from \"../../data/carrer\";\nimport HeaderTitle from \"../../components/Title/HeaderTitle\";\nimport { MotionBox } from \"../../components/Animation/Motion/Motion\";\nimport {\n  container,\n  PageSlideFade,\n} from \"../../components/Animation/PageSlideFade\";\nimport PageLayout from \"../Layouts/PageLayout\";\nimport { useLinkColor } from \"../../style/colors\";\nimport { IconType } from \"react-icons\";\ninterface ITab {\n  name: string;\n  filterName: \"\" | \"development\" | \"design\" | \"devops\";\n  icon: IconType;\n}\nconst tabList: ITab[] = [\n  {\n    name: \"All\",\n    filterName: \"\",\n    icon: AiTwotoneThunderbolt,\n  },\n  {\n    name: \"Web Development\",\n    filterName: \"development\",\n    icon: BiDesktop,\n  },\n  {\n    name: \"Web Design\",\n    filterName: \"design\",\n    icon: GiSpiderWeb,\n  },\n  {\n    name: \"Devops\",\n    filterName: \"devops\",\n    icon: AiOutlineCloudServer,\n  },\n];\n\nconst TechStack = () => {\n  const bgColor = useLinkColor();\n  const [skillsList, setSkillsList] = useState<ISkill[]>([]);\n\n  React.useEffect(() => {\n    setSkillsList(skillsArray);\n  }, []);\n\n  const filterSkills = (filter: typeof tabList[0][\"filterName\"]) => {\n    if (filter)\n      setSkillsList(skillsArray.filter((skill) => skill.type === filter));\n    else setSkillsList(skillsArray);\n  };\n\n  return (\n    <PageLayout>\n      <PageSlideFade>\n        <VStack spacing={8}>\n          <Section>\n            <VStack>\n              <HeaderTitle underlineColor={\"#000\"}>Tech Stack</HeaderTitle>\n              <Text\n                fontSize={\"xl\"}\n                color={useColorModeValue(\"gray.500\", \"gray.200\")}\n                maxW=\"lg\"\n                textAlign=\"center\"\n              >\n                A list of my favorite tools and technologies that I use on a\n                regular basis.\n              </Text>\n            </VStack>\n          </Section>\n          <Section zIndex={5}>\n            <Tabs\n              variant=\"soft-rounded\"\n              colorScheme=\"blue\"\n              align=\"center\"\n              w=\"100%\"\n            >\n              <TabList display=\"flex\" flexWrap=\"wrap\">\n                {tabList.map((tab, index) => (\n                  <Tab\n                    bg={useColorModeValue(\"gray.100\", \"gray.800\")}\n                    color={useColorModeValue(\"gray.600\", \"gray.500\")}\n                    _selected={{\n                      color: \"white\",\n                      bg: bgColor,\n                    }}\n                    mr={2}\n                    mt={2}\n                    onClick={() => filterSkills(tab.filterName)}\n                    key={index}\n                  >\n                    <HStack spacing={1}>\n                      <Icon as={tab.icon} />\n                      <Text>{tab.name}</Text>\n                    </HStack>\n                  </Tab>\n                ))}\n              </TabList>\n              <TabPanels minHeight={\"45vh\"}>\n                <TabPanel px={0}>\n                  <MotionBox\n                    variants={container}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                  >\n                    <SimpleGrid columns={[1, 1, 2]} spacing={4} mt={8}>\n                      {skillsList.map((tool, index) => (\n                        <SkillCard\n                          key={index}\n                          name={tool.name}\n                          description={tool.description}\n                          image={tool.image}\n                          // platform={\"web\"}\n                          link={tool.link}\n                        />\n                      ))}\n                    </SimpleGrid>\n                  </MotionBox>\n                </TabPanel>\n                <TabPanel px={0}>\n                  <MotionBox\n                    variants={container}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                  >\n                    <SimpleGrid columns={[1, 2]} spacing={4} mt={8}>\n                      {skillsList.map((tool, index) => (\n                        <SkillCard\n                          key={index}\n                          name={tool.name}\n                          description={tool.description}\n                          image={tool.image}\n                          // platform={\"web\"}\n                          link={tool.link}\n                        />\n                      ))}\n                    </SimpleGrid>\n                  </MotionBox>\n                </TabPanel>\n                <TabPanel px={0}>\n                  <MotionBox\n                    variants={container}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                  >\n                    <SimpleGrid columns={[1, 2]} spacing={4} mt={8}>\n                      {skillsList.map((tool, index) => (\n                        <SkillCard\n                          key={index}\n                          name={tool.name}\n                          description={tool.description}\n                          image={tool.image}\n                          // platform={\"web\"}\n                          link={tool.link}\n                        />\n                      ))}\n                    </SimpleGrid>\n                  </MotionBox>\n                </TabPanel>\n                <TabPanel px={0}>\n                  <MotionBox\n                    variants={container}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                  >\n                    <SimpleGrid columns={[1, 2]} spacing={4} mt={8}>\n                      {skillsList.map((tool, index) => (\n                        <SkillCard\n                          key={index}\n                          name={tool.name}\n                          description={tool.description}\n                          image={tool.image}\n                          // platform={\"web\"}\n                          link={tool.link}\n                        />\n                      ))}\n                    </SimpleGrid>\n                  </MotionBox>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </Section>\n        </VStack>\n      </PageSlideFade>\n    </PageLayout>\n  );\n};\n\nexport default TechStack;\n","import { ReactNode } from \"react\";\nimport { SlideFade } from \"@chakra-ui/react\";\nimport { MotionBox } from \"./Motion/Motion\";\n\nconst staggerVariants = {\n  initial: {\n    opacity: 0,\n    translateY: -20,\n  },\n  enter: {\n    transition: { staggerChildren: 0.15, delayChildren: 0.4 },\n  },\n  exit: {\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\n  },\n};\n\nconst variants = {\n  initial: {\n    opacity: 0,\n    translateY: -20,\n  },\n  enter: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: { stiffness: 1000, velocity: -100 },\n    },\n  },\n  exit: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: { stiffness: 1000 },\n    },\n  },\n};\n\nexport const easing = [0.6, -0.05, 0.01, 0.99];\n\nexport const stagger = {\n  animate: {\n    transition: {\n      staggerChildren: 0.1,\n    },\n  },\n};\n\nexport const fadeInUp = {\n  initial: {\n    y: 60,\n    opacity: 0,\n    transition: { duration: 0.6, ease: easing },\n  },\n  animate: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.6,\n      ease: easing,\n    },\n  },\n};\n\nexport const container = {\n  hidden: { opacity: 1, scale: 0 },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      delayChildren: 0.3,\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nexport const item = {\n  hidden: { y: 20, opacity: 0 },\n  visible: {\n    y: 0,\n    opacity: 1,\n  },\n};\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const PageSlideFade = ({ children }: Props) => {\n  return <SlideFade in>{children}</SlideFade>;\n};\n\nexport const StaggerChildren = ({ children }: Props) => {\n  return (\n    <MotionBox\n      animate={{\n        opacity: 1,\n        translateY: 0,\n      }}\n      variants={staggerVariants}\n    >\n      {children}\n    </MotionBox>\n  );\n};\n\nexport const CardTransition = ({ children }: Props) => {\n  return <MotionBox variants={variants}>{children}</MotionBox>;\n};\n","import simbirsoft from \"../assets/images/carrer/SimbirSoft.png\";\nimport everland from \"../assets/images/carrer/everland.png\";\nimport itincubator from \"../assets/images/skills/itincubator.png\";\nimport javascript from \"../assets/images/skills/javascript.png\";\nimport react from \"../assets/images/skills/react.png\";\nimport redux from \"../assets/images/skills/redux.png\";\nimport typescript from \"../assets/images/skills/typescript.png\";\nimport css from \"../assets/images/skills/css3.png\";\nimport html from \"../assets/images/skills/html.jpg\";\nimport heroku from \"../assets/images/skills/heroku.png\";\nimport figma from \"../assets/images/skills/figma.png\";\nimport webstorm from \"../assets/images/skills/WebStorm_Icon.png\";\nimport spbpu from \"../assets/images/carrer/unnamed.jpg\";\nexport const companies = [\n  {\n    title: \"SimbirSoft\",\n    alt: \"PS image\",\n    role: \"Intern frontend developer\",\n    skills: [\"react\", \"typescript\", \"redux/redux-saga\", \"swagger\"],\n    period: \"02.2022 - 05.2022\",\n    logo: simbirsoft,\n  },\n  {\n    title: \"Everland\",\n    alt: \"BT image\",\n    role: \"Layout designer\",\n    skills: [\"HTML\", \"CSS\", \"javascript\", \"WordPress\"],\n    period: \"09.2021 - present\",\n    logo: everland,\n  },\n];\nexport const institutes = [\n  {\n    short_title: \"IT-Incubator\",\n    title: \"IT-community for learning frontend development\",\n    alt: \"Nuces image\",\n    role: \"Frontend dev\",\n    skills: [\"react\", \"javascript\", \"typescript\", \"redux\"],\n    period: \"02.2022 - 07.2022\",\n    startingYear: \"2022\",\n    logo: itincubator,\n  },\n  {\n    short_title: \"SPbPU\",\n    title: \"Peter the Great St.Petersburg Polytechnic University\",\n    alt: \"Nuces image\",\n    role: \"Nuclear power plant operation engineer\",\n    skills: [\"physics\", \"nuclear physics\", \"mathematics\"],\n    period: \"2016 - 2021\",\n    startingYear: \"2016\",\n    logo: spbpu,\n  },\n];\nexport interface ISkill {\n  name: string;\n  description: string;\n  link: string;\n  type: string;\n  image: string;\n}\nexport const skillsArray: ISkill[] = [\n  {\n    name: \"Java Script\",\n    description: \"Web development\",\n    link: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript\",\n    type: \"development\",\n    image: javascript,\n  },\n  {\n    name: \"React\",\n    description: \"Web development\",\n    link: \"https://reactjs.org/\",\n    type: \"development\",\n    image: react,\n  },\n  {\n    name: \"Typescript\",\n    description: \"Web development\",\n    link: \"https://www.typescriptlang.org/\",\n    type: \"development\",\n    image: typescript,\n  },\n  {\n    name: \"Redux\",\n    description: \"State manager for app\",\n    link: \"https://redux.js.org/\",\n    type: \"development\",\n    image: redux,\n  },\n  {\n    name: \"Html5\",\n    description: \"Web layouts\",\n    link: \"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5\",\n    type: \"development\",\n    image: html,\n  },\n  {\n    name: \"Css3\",\n    description: \"Web design\",\n    link: \"https://developer.mozilla.org/en-US/docs/Web/CSS\",\n    type: \"design\",\n    image: css,\n  },\n\n  {\n    name: \"Heroku\",\n    description: \"Devops\",\n    link: \"https://www.heroku.com/\",\n    type: \"devops\",\n    image: heroku,\n  },\n  {\n    name: \"WebStorm IDE\",\n    description: \"Code editor of choice\",\n    link: \"https://www.jetbrains.com/webstorm/\",\n    type: \"development\",\n    image: webstorm,\n  },\n  {\n    name: \"Figma\",\n    description: \"Collaborative Design\",\n    link: \"https://www.figma.com/\",\n    type: \"design\",\n    image: figma,\n  },\n];\n","import {\n  ThemeOverride,\n  useColorModeValue,\n  theme as defaultTheme,\n} from \"@chakra-ui/react\";\nimport { transparentize } from \"@chakra-ui/theme-tools\";\n\nexport const linkColors = {\n  light: \"accent.400\",\n  dark: \"accent.500\",\n  lhover: \"accent.200\",\n  dhover: \"accent.700\",\n  visitedLight: \"accent.300\",\n  visitedDark: \"accent.600\",\n};\n\nexport function useLinkColor() {\n  return useColorModeValue(linkColors.dark, linkColors.light);\n}\n\nexport function useHoverLinkColor() {\n  return useColorModeValue(linkColors.dhover, linkColors.lhover);\n}\n\nexport function useVisitedLinkColor() {\n  return useColorModeValue(linkColors.visitedLight, linkColors.visitedDark);\n}\n\nexport function getTagBackgroundDark(\n  accentKey: ColorKeys,\n  theme: ThemeOverride\n) {\n  return (\n    accentKey &&\n    transparentize((theme.colors as any)[accentKey][200], 0.1)(theme)\n  );\n}\n\nexport const colors = {\n  ...defaultTheme.colors,\n  gray: {\n    ...defaultTheme.colors.gray,\n    1000: \"#121721\",\n  },\n  defaultAccent: {\n    50: \"#e3f2fc\",\n    100: \"#ddf2ff\",\n    200: \"#abd2fc\",\n    300: \"#5daafc\",\n    400: \"#1a85ff\",\n    500: \"#006be6\",\n    600: \"#0053b4\",\n    700: \"#003b82\",\n    800: \"#002451\",\n    900: \"#000d21\",\n  },\n  accent: {\n    50: \"var(--colors-accent-50)\",\n    100: \"var(--colors-accent-100)\",\n    200: \"var(--colors-accent-200)\",\n    300: \"var(--colors-accent-300)\",\n    400: \"var(--colors-accent-400)\",\n    500: \"var(--colors-accent-500)\",\n    600: \"var(--colors-accent-600)\",\n    700: \"var(--colors-accent-700)\",\n    800: \"var(--colors-accent-800)\",\n    900: \"var(--colors-accent-900)\",\n  },\n};\n\nexport type ColorKeys = keyof typeof colors;\n\nexport const accentKeys: ColorKeys[] = [\n  \"defaultAccent\",\n  \"green\",\n  \"cyan\",\n  \"orange\",\n  \"blue\",\n  \"pink\",\n  \"teal\",\n  \"purple\",\n  \"red\",\n];\n"],"names":["variants","hidden","opacity","x","y","enter","exit","children","Fragment","initial","animate","transition","type","props","textAlign","fontSize","w","maxW","mx","full","rest","as","name","image","link","description","linkColor","useLinkColor","Motion","item","whileHover","isExternal","href","target","p","bg","useColorModeValue","rounded","borderWidth","borderColor","align","spacing","_hover","shadow","position","overflow","lineHeight","boxShadow","top","bottom","left","right","src","height","width","justify","h","flexGrow","fontWeight","noOfLines","color","tabList","filterName","icon","AiTwotoneThunderbolt","BiDesktop","GiSpiderWeb","AiOutlineCloudServer","bgColor","useState","skillsList","setSkillsList","React","skillsArray","PageLayout","PageSlideFade","HeaderTitle","underlineColor","zIndex","variant","colorScheme","display","flexWrap","map","tab","index","_selected","mr","mt","onClick","filter","skill","minHeight","px","container","columns","tool","staggerVariants","translateY","staggerChildren","delayChildren","staggerDirection","stiffness","velocity","scale","visible","in","StaggerChildren","CardTransition","companies","title","alt","role","skills","period","logo","simbirsoft","institutes","short_title","startingYear","itincubator","spbpu","redux","html","webstorm","figma","linkColors","defaultTheme","gray","defaultAccent","accent"],"sourceRoot":""}