{"version":3,"file":"static/js/696.88b973d5.chunk.js","mappings":"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","sources":["Paths/LocalPath.ts","components/ColorModeSwitcher.tsx","components/Header/Header.tsx","config/myConfig.tsx","components/Footer/Footer.tsx","webpack://portfolio/./src/components/DottsSvg/dotts.module.css?5527","components/DottsSvg/Dotts.tsx","components/Projects/ProjectCard/ProjectCard.tsx","components/Projects/Projects.tsx","components/Home/Home.tsx","Pages/Layouts/Layout.tsx","Routes/AppRouter.tsx","components/Animation/Motion/Motion.tsx","components/Title/Underline.tsx","components/Title/HeaderTitle.tsx","data/projects.ts"],"sourcesContent":["export enum LocalPaths {\n  about = \"/about\",\n  projects = \"/projects\",\n  interesting = \"/interesting\",\n  techStack = \"/tech-stack\",\n  devStory = \"story\",\n  achievements = \"/achievements\",\n}\n","import * as React from \"react\";\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport useSound from \"use-sound\";\nimport lightswitch from \"../assets/audios/lightswitch.mp3\";\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">;\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  const [play] = useSound(lightswitch, {\n    volume: 0.05,\n    sprite: {\n      on: [0, 300],\n      off: [500, 300],\n    },\n  });\n\n  const handleClick = () => {\n    text === \"dark\" ? play({ id: \"on\" }) : play({ id: \"off\" });\n    toggleColorMode();\n  };\n\n  return (\n    <Tooltip\n      label={text === \"dark\" ? \"Dark mode\" : \"Light mode\"}\n      aria-label=\"A tooltip\"\n    >\n      <IconButton\n        size=\"md\"\n        fontSize=\"md\"\n        variant=\"ghost\"\n        color=\"current\"\n        marginLeft=\"2\"\n        onClick={handleClick}\n        icon={<SwitchIcon />}\n        aria-label={`Switch to ${text} mode`}\n        _hover={{\n          bg: useColorModeValue(\"gray.200\", \"gray.900\"),\n        }}\n        {...props}\n      />\n    </Tooltip>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  HStack,\n  Icon,\n  IconButton,\n  Link,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Stack,\n  Text,\n  Tooltip,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { AiOutlineClose, AiTwotoneThunderbolt } from \"react-icons/ai\";\nimport { FaGithub } from \"react-icons/fa\";\nimport { ColorModeSwitcher } from \"../ColorModeSwitcher\";\nimport UserIcon from \"../../assets/images/ava.jpg\";\n\nimport { BiChevronDown } from \"react-icons/bi\";\nimport { BsCheckCircle } from \"react-icons/bs\";\nimport { MdTimeline } from \"react-icons/md\";\nimport { LocalPaths } from \"../../Paths/LocalPath\";\n\nconst webLinks = [\n  { name: \"About\", path: LocalPaths.about },\n  { name: \"Projects\", path: LocalPaths.projects },\n];\n\nconst mobileLinks = [\n  { name: \"About\", path: LocalPaths.about },\n  { name: \"Projects\", path: LocalPaths.projects },\n  { name: \"Tech Stack\", path: LocalPaths.techStack },\n  { name: \"Interesting links\", path: LocalPaths.interesting },\n];\n\ninterface NavLinkProps {\n  index?: string;\n  name: string;\n  path: string;\n  onClose: () => void;\n  children?: JSX.Element;\n}\n\nconst NavLink = (props: NavLinkProps) => {\n  return (\n    <Link\n      as={RouterNavLink}\n      px={2}\n      py={1}\n      rounded={\"md\"}\n      _hover={{\n        textDecoration: \"none\",\n        bg: useColorModeValue(\"gray.200\", \"gray.900\"),\n      }}\n      _activeLink={{\n        color: useColorModeValue(\"blue.500\", \"blue.200\"),\n      }}\n      onClick={() => props.onClose()}\n      to={props.path}\n    >\n      {props.name}\n      {props?.children}\n    </Link>\n  );\n};\n\nexport default function Header() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const menuProps = {\n    bg: useColorModeValue(\"gray.200\", \"gray.900\"),\n    color: useColorModeValue(\"blue.500\", \"blue.200\"),\n  };\n\n  return (\n    <>\n      <Box bg={useColorModeValue(\"white\", \"gray.700\")} px={4} boxShadow={\"lg\"}>\n        <Flex\n          h={16}\n          alignItems={\"center\"}\n          justifyContent={\"space-between\"}\n          w={[\"90%\", \"85%\", \"80%\"]}\n          maxW={800}\n          mx=\"auto\"\n        >\n          <IconButton\n            size={\"md\"}\n            icon={isOpen ? <AiOutlineClose /> : <GiHamburgerMenu />}\n            aria-label={\"Open Menu\"}\n            display={[\"inherit\", \"inherit\", \"none\"]}\n            onClick={isOpen ? onClose : onOpen}\n          />\n          <HStack spacing={8} alignItems={\"center\"}>\n            <Box>\n              <RouterNavLink to={\"/\"}>\n                <Avatar size={\"sm\"} src={UserIcon} />\n              </RouterNavLink>\n            </Box>\n            <Box as={\"nav\"} display={{ base: \"none\", md: \"flex\" }}>\n              {webLinks.map((link, index) => (\n                <NavLink\n                  key={index}\n                  name={link.name}\n                  path={link.path}\n                  onClose={onClose}\n                />\n              ))}\n              <Menu isLazy>\n                <MenuButton\n                  as={Button}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  px={2}\n                  py={1.5}\n                  fontSize={\"1em\"}\n                  rounded={\"md\"}\n                  height={\"auto \"}\n                  _hover={menuProps}\n                  _expanded={menuProps}\n                  _focus={{ boxShadow: \"outline\" }}\n                  rightIcon={<BiChevronDown size={18} />}\n                >\n                  Links\n                </MenuButton>\n                <MenuList zIndex={5}>\n                  <Link\n                    as={RouterNavLink}\n                    to={LocalPaths.techStack}\n                    style={{ margin: 0 }}\n                  >\n                    <MenuItem>\n                      <HStack>\n                        <Icon\n                          as={AiTwotoneThunderbolt}\n                          size={18}\n                          color={useColorModeValue(\"blue.500\", \"blue.200\")}\n                        />\n                        <Text>Tech Stack</Text>\n                      </HStack>\n                    </MenuItem>\n                  </Link>\n                  <Link as={RouterNavLink} to={LocalPaths.interesting}>\n                    <MenuItem>\n                      <HStack>\n                        <Icon\n                          as={MdTimeline}\n                          size={18}\n                          color={useColorModeValue(\"blue.500\", \"blue.200\")}\n                        />\n                        <Text>Interesting links</Text>\n                      </HStack>\n                    </MenuItem>\n                  </Link>\n                  <Link as={RouterNavLink} to={LocalPaths.achievements}>\n                    <MenuItem>\n                      <HStack>\n                        <Icon\n                          as={BsCheckCircle}\n                          size={18}\n                          color={useColorModeValue(\"blue.500\", \"blue.200\")}\n                        />\n                        <Text>Achievements</Text>\n                      </HStack>\n                    </MenuItem>\n                  </Link>\n                </MenuList>\n              </Menu>\n            </Box>\n          </HStack>\n          <Flex alignItems={\"center\"}>\n            <Tooltip label={\"Github account\"} aria-label=\"A tooltip\">\n              <IconButton\n                as={Link}\n                href={\"https://github.com/GalichAnton\"}\n                size={\"md\"}\n                icon={<FaGithub />}\n                aria-label={\"Github account\"}\n                bg={useColorModeValue(\"white\", \"gray.700\")}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.900\"),\n                }}\n              />\n            </Tooltip>\n            <ColorModeSwitcher justifySelf=\"flex-end\" />\n          </Flex>\n        </Flex>\n\n        {isOpen ? (\n          <Box\n            pb={4}\n            w={[\"100%\", \"100%\", \"80%\"]}\n            maxW={800}\n            display={[\"inherit\", \"inherit\", \"none\"]}\n          >\n            <Stack as={\"nav\"} spacing={4}>\n              {mobileLinks.map((link, index) => (\n                <NavLink\n                  key={index}\n                  name={link.name}\n                  path={link.path}\n                  onClose={onClose}\n                />\n              ))}\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n    </>\n  );\n}\n","import { FaGithub, FaLinkedin, FaTelegram } from \"react-icons/fa\";\nimport { FiMail } from \"react-icons/fi\";\ninterface IAccount {\n  url: string;\n  label: string;\n  type: string;\n  icon: JSX.Element;\n}\ninterface IConfig {\n  copyright: string;\n  author: {\n    name: string;\n    accounts: IAccount[];\n  };\n}\n\nconst myConfig: IConfig = {\n  copyright: `Copyright © ${new Date().getFullYear()} Muhammad Ahmad. All Rights Reserved.`,\n  author: {\n    name: \"Muhammad Ahmad\",\n    accounts: [\n      {\n        url: \"https://github.com/GalichAnton\",\n        label: \"Github Account\",\n        type: \"gray\",\n        icon: <FaGithub />,\n      },\n      {\n        url: \"https://t.me/Anton_Galich\",\n        label: \"Telegram Account\",\n        type: \"telegram\",\n        icon: <FaTelegram />,\n      },\n      {\n        url: \"https://www.linkedin.com/in/antongalich\",\n        label: \"LinkedIn Account\",\n        type: \"linkedin\",\n        icon: <FaLinkedin />,\n      },\n      {\n        url: \"mailto:inthesky133@gmail.com\",\n        label: \"Mail me\",\n        type: \"gray\",\n        icon: <FiMail />,\n      },\n    ],\n  },\n};\n\nexport default myConfig;\n","import * as React from \"react\";\nimport {\n  Stack,\n  IconButton,\n  Link,\n  Box,\n  Text,\n  useColorModeValue,\n  Flex,\n} from \"@chakra-ui/react\";\nimport myConfig from \"../../config/myConfig\";\n\nconst iconProps = {\n  variant: \"ghost\",\n  size: \"lg\",\n  isRound: true,\n};\n\nconst Footer = () => {\n  return (\n    <Stack\n      as=\"footer\"\n      isInline\n      spacing={[1, 2]}\n      pt={4}\n      pb={4}\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      w={[\"100%\", \"85%\", \"80%\"]}\n      maxW={800}\n      mx=\"auto\"\n    >\n      <Flex\n        flexDirection={[\"column\", \"column\", \"row\"]}\n        flexFlow={[\"column-reverse\", \"column-reverse\"]}\n        justifyContent={[\"center\", \"space-between\"]}\n        alignItems=\"center\"\n        w=\"100%\"\n        justify={\"space-between\"}\n      >\n        <Text\n          textAlign=\"center\"\n          fontSize=\"sm\"\n          color={useColorModeValue(\"gray.500\", \"gray.200\")}\n        >\n          © {new Date().getFullYear()} Galich Anton{\" \"}\n        </Text>\n        <Box textAlign=\"center\">\n          {myConfig.author.accounts.map((sc, index) => (\n            <IconButton\n              key={index}\n              as={Link}\n              isExternal\n              href={sc.url}\n              aria-label={sc.label}\n              colorScheme={sc.type}\n              icon={sc.icon}\n              {...iconProps}\n            />\n          ))}\n        </Box>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default Footer;\n","// extracted by mini-css-extract-plugin\nexport default {\"dottedRightTransform\":\"dotts_dottedRightTransform__OM5ib\",\"dottedLeftTransform\":\"dotts_dottedLeftTransform__f235P\",\"dottedColor\":\"dotts_dottedColor__ISBvf\"};","import { Box } from \"@chakra-ui/react\";\nimport styles from \"./dotts.module.css\";\nexport const DottedSvgs = () => {\n  return (\n    <Box\n      position=\"absolute\"\n      height=\"50rem\"\n      width=\"100%\"\n      overflow=\"hidden\"\n      display={[\"none\", \"none\", \"block\"]}\n      zIndex={-1}\n    >\n      <Box position=\"relative\" height=\"full\" mx=\"auto\" maxW=\"940px\">\n        <Box position=\"absolute\" left=\"100%\">\n          <svg\n            className={`${styles.dottedRightTransform} ${styles.dottedColor}`}\n            width=\"404\"\n            height=\"784\"\n            fill=\"none\"\n            viewBox=\"0 0 404 784\"\n          >\n            <defs>\n              <pattern\n                id=\"5d0dd344-b041-4d26-bec4-8d33ea57ec9b\"\n                x=\"0\"\n                y=\"0\"\n                width=\"20\"\n                height=\"20\"\n                patternUnits=\"userSpaceOnUse\"\n              >\n                <rect\n                  x=\"0\"\n                  y=\"0\"\n                  width=\"4\"\n                  height=\"4\"\n                  className=\"text-gray-700\"\n                  fill=\"currentColor\"\n                ></rect>\n              </pattern>\n            </defs>\n            <rect\n              width=\"404\"\n              height=\"784\"\n              fill=\"url(#5d0dd344-b041-4d26-bec4-8d33ea57ec9b)\"\n            ></rect>\n          </svg>\n        </Box>\n        <Box position=\"absolute\" right=\"100%\">\n          <svg\n            className={`${styles.dottedLeftTransform} ${styles.dottedColor}`}\n            width=\"404\"\n            height=\"784\"\n            fill=\"none\"\n            viewBox=\"0 0 404 784\"\n          >\n            <defs>\n              <pattern\n                id=\"5d0dd344-b041-4d26-bec4-8d33ea57ec9b\"\n                x=\"0\"\n                y=\"0\"\n                width=\"20\"\n                height=\"20\"\n                patternUnits=\"userSpaceOnUse\"\n              >\n                <rect\n                  x=\"0\"\n                  y=\"0\"\n                  width=\"4\"\n                  height=\"4\"\n                  className=\"text-gray-700\"\n                  fill=\"currentColor\"\n                ></rect>\n              </pattern>\n            </defs>\n            <rect\n              width=\"404\"\n              height=\"784\"\n              fill=\"url(#5d0dd344-b041-4d26-bec4-8d33ea57ec9b)\"\n            ></rect>\n          </svg>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import * as React from \"react\";\nimport {\n  HStack,\n  VStack,\n  Text,\n  useColorModeValue,\n  Tag,\n  Link,\n  Image,\n} from \"@chakra-ui/react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { getTagColor } from \"../../../style/theme\";\n\ninterface ProjectCardProps {\n  title: string;\n  description: string;\n  logo: string;\n  link: string;\n  technologies: string[];\n}\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({\n  title,\n  description,\n  logo,\n  link,\n  technologies,\n}) => {\n  const textColor = useColorModeValue(\"gray.500\", \"gray.200\");\n  const [isOpen, setIsOpen] = React.useState(false);\n  const toggleOpen = () => setIsOpen(!isOpen);\n\n  return (\n    <motion.div layout onClick={toggleOpen}>\n      <HStack\n        p={4}\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        rounded=\"xl\"\n        borderWidth=\"1px\"\n        borderColor={useColorModeValue(\"gray.100\", \"gray.700\")}\n        w=\"100%\"\n        h=\"100%\"\n        textAlign=\"left\"\n        align=\"start\"\n        spacing={4}\n        cursor=\"pointer\"\n        _hover={{ shadow: \"lg\" }}\n      >\n        <Image src={logo} width={33} height={33} rounded=\"md\" />\n        <VStack align=\"start\" justify=\"flex-start\">\n          <VStack spacing={0} align=\"start\">\n            <motion.div layout>\n              <HStack>\n                <Text\n                  as={Link}\n                  href={link}\n                  fontWeight=\"bold\"\n                  fontSize=\"md\"\n                  noOfLines={1}\n                  onClick={(e) => e.stopPropagation()}\n                  isExternal\n                >\n                  {title}\n                </Text>\n                <HStack spacing=\"1\">\n                  {technologies.map((tech, i) => (\n                    <Tag key={i} size=\"sm\" colorScheme={getTagColor(tech)}>\n                      {tech}\n                    </Tag>\n                  ))}\n                </HStack>\n              </HStack>\n            </motion.div>\n            <AnimatePresence>\n              <motion.div\n                layout\n                initial={{ opacity: 1 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 1 }}\n              >\n                {!isOpen && (\n                  <Text fontSize=\"sm\" color={textColor} noOfLines={{ base: 2 }}>\n                    {description}\n                  </Text>\n                )}\n              </motion.div>\n            </AnimatePresence>\n\n            <AnimatePresence>\n              <motion.div\n                layout\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                variants={{ exit: { transition: { staggerChildren: 0.1 } } }}\n              >\n                {isOpen && (\n                  <Text\n                    fontSize=\"sm\"\n                    color={textColor}\n                    // noOfLines={{ base: isOpen ? 5 : 2 }}\n                  >\n                    {description}\n                  </Text>\n                )}\n              </motion.div>\n            </AnimatePresence>\n          </VStack>\n        </VStack>\n      </HStack>\n    </motion.div>\n  );\n};\n\nexport default ProjectCard;\n","import * as React from \"react\";\nimport { VStack, SimpleGrid } from \"@chakra-ui/react\";\nimport { AnimateSharedLayout } from \"framer-motion\";\nimport { MotionBox } from \"../Animation/Motion/Motion\";\nimport HeaderTitle from \"../Title/HeaderTitle\";\nimport ProjectCard from \"./ProjectCard/ProjectCard\";\nimport { IProject } from \"../../data/projects\";\n\ninterface ProjectsProps {\n  projects: IProject[];\n}\n\nconst ORANGE = \"#ff9400\";\n\nconst Projects: React.FC<ProjectsProps> = ({ projects }) => {\n  return (\n    <VStack align=\"start\" spacing={8}>\n      <HeaderTitle underlineColor={ORANGE} mt={0} mb={0}>\n        Projects\n      </HeaderTitle>\n      <AnimateSharedLayout>\n        <SimpleGrid columns={1} spacing={4} mt={5} w=\"100%\">\n          {projects.map((project, index) => (\n            <MotionBox whileHover={{ y: -5 }} key={index}>\n              <ProjectCard\n                key={project.id}\n                title={project.title}\n                description={project.desc}\n                logo={project.logo}\n                link={project.link}\n                technologies={project.technologies}\n              />\n            </MotionBox>\n          ))}\n        </SimpleGrid>\n      </AnimateSharedLayout>\n    </VStack>\n  );\n};\n\nexport default Projects;\n","import * as React from \"react\";\nimport {\n  Flex,\n  Avatar,\n  Box,\n  Text,\n  Stack,\n  Link,\n  UnorderedList,\n  ListItem,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { Link as NavLink } from \"react-router-dom\";\nimport { MotionBox, MotionFlex } from \"../Animation/Motion/Motion\";\nimport { projectsList } from \"../../data/projects\";\nimport \"../../style/style.css\";\nimport UserIcon from \"../../assets/images/ava.jpg\";\nimport HeaderTitle from \"../Title/HeaderTitle\";\nimport Projects from \"../Projects/Projects\";\nimport { LocalPaths } from \"../../Paths/LocalPath\";\n\nconst ANIMATION_DURATION = 0.5;\nconst ORANGE = \"#ff9400\";\n\nconst Home = () => {\n  return (\n    <Flex direction=\"column\" align=\"center\">\n      <Flex direction={[\"column\", \"column\", \"row\"]}>\n        <MotionBox\n          opacity=\"0\"\n          initial={{\n            translateX: -150,\n            opacity: 0,\n          }}\n          animate={{\n            translateX: 0,\n            opacity: 1,\n            transition: {\n              duration: ANIMATION_DURATION,\n            },\n          }}\n          m=\"auto\"\n          mb={[16, 16, \"auto\"]}\n        >\n          <Avatar size={\"2xl\"} src={UserIcon} />\n        </MotionBox>\n        <MotionFlex\n          ml={[\"auto\", \"auto\", 16]}\n          m={[\"auto\", \"initial\"]}\n          w={[\"90%\", \"85%\", \"80%\"]}\n          maxW=\"800px\"\n          opacity=\"0\"\n          justify=\"center\"\n          direction=\"column\"\n          initial={{\n            opacity: 0,\n            translateX: 150,\n          }}\n          animate={{\n            opacity: 1,\n            translateX: 0,\n            transition: {\n              duration: ANIMATION_DURATION,\n            },\n          }}\n        >\n          <HeaderTitle\n            underlineColor={ORANGE}\n            emoji=\"👋\"\n            mt={0}\n            className=\"face\"\n          >\n            Hello!\n          </HeaderTitle>\n          <Box as=\"h2\" fontSize=\"2xl\" fontWeight=\"400\" textAlign=\"left\">\n            My name is{\" \"}\n            <Box as=\"strong\" fontWeight=\"600\">\n              Anton\n            </Box>{\" \"}\n            and I&apos;m a{\" \"}\n            <Box as=\"span\" whiteSpace=\"nowrap\">\n              Frontend Developer and\n            </Box>\n          </Box>\n          <Box as=\"h2\" fontSize=\"2xl\" fontWeight=\"400\" mt={5} textAlign=\"left\">\n            This is my portfolio website!\n          </Box>\n        </MotionFlex>\n      </Flex>\n      <MotionBox\n        w=\"100%\"\n        opacity=\"0\"\n        initial={{\n          translateY: 80,\n        }}\n        animate={{\n          translateY: 0,\n          opacity: 1,\n          transition: {\n            delay: ANIMATION_DURATION - 0.1,\n            duration: ANIMATION_DURATION,\n          },\n        }}\n      >\n        <Box mt={10}>\n          <Stack\n            mb={10}\n            mx={[0, 0, 10]}\n            padding={4}\n            align=\"start\"\n            borderLeft=\"4px solid\"\n            borderColor={\"#53c8c4\"}\n            color={\"whatsapp\"}\n            _hover={{ shadow: \"lg\" }}\n            backgroundColor={useColorModeValue(\"gray.100\", \"#1e2533\")}\n            rounded=\"sm\"\n            fontSize=\"md\"\n          >\n            <Text textAlign=\"center\" color=\"#53c8c4\" fontWeight=\"bold\">\n              Highlights\n            </Text>\n            <UnorderedList textAlign=\"left\" paddingLeft={5} m={0}>\n              <ListItem>\n                <Link as={NavLink} to={LocalPaths.devStory}>\n                  Story page\n                </Link>\n              </ListItem>\n              <ListItem>\n                <Link as={NavLink} to={LocalPaths.techStack}>\n                  Tech Stack\n                </Link>\n              </ListItem>\n              <ListItem>\n                <Link as={NavLink} to={LocalPaths.achievements}>\n                  Achievements\n                </Link>\n              </ListItem>\n            </UnorderedList>\n          </Stack>\n          <Projects projects={projectsList} />\n        </Box>\n      </MotionBox>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { Box } from \"@chakra-ui/react\";\nimport { DottedSvgs } from \"../../components/DottsSvg/Dotts\";\nimport Home from \"../../components/Home/Home\";\nconst Layout = () => {\n  const location = useLocation();\n  return (\n    <>\n      <Header />\n      <DottedSvgs />\n      <Box\n        textAlign=\"center\"\n        fontSize=\"xl\"\n        w={[\"90%\", \"85%\", \"80%\"]}\n        maxW={800}\n        mx=\"auto\"\n      >\n        <Box pt={10} pb={10}>\n          {location.pathname === \"/\" ? <Home /> : <Outlet />}\n        </Box>\n      </Box>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { lazy } from \"react\";\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\nimport Layout from \"../Pages/Layouts/Layout\";\nimport { LocalPaths } from \"../Paths/LocalPath\";\nconst ProjectsPage = lazy(() => import(\"../Pages/ProjectsPage/ProjectsPage\"));\nconst AboutPage = lazy(() => import(\"../Pages/AboutPage/AboutPage\"));\nconst TechStack = lazy(() => import(\"../Pages/TechsPage/TechsPage\"));\nconst AchievementPage = lazy(\n  () => import(\"../Pages/AchivementPage/AchievementPage\")\n);\n\nconst LinksPage = lazy(() => import(\"../Pages/LinksPage/LinksPage\"));\nconst AppRouter = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path={\"/\"} element={<Layout />}>\n          <Route path={LocalPaths.about} element={<AboutPage />} />\n          <Route path={LocalPaths.projects} element={<ProjectsPage />} />\n          <Route path={LocalPaths.techStack} element={<TechStack />} />\n          <Route path={LocalPaths.achievements} element={<AchievementPage />} />\n          <Route path={LocalPaths.interesting} element={<LinksPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n\nexport default AppRouter;\n","import { Box, Flex, Image, forwardRef, List, Text } from \"@chakra-ui/react\";\nimport { motion, isValidMotionProp } from \"framer-motion\";\nimport placeholder from \"../../../assets/images/placeholder.png\";\n\nconst ForwardBox = forwardRef((props, ref) => {\n  const chakraProps = Object.fromEntries(\n    // do not pass framer props to DOM element\n    Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n  );\n  return <Box ref={ref} {...chakraProps} />;\n});\nexport const MotionBox = motion(ForwardBox);\n\nconst ForwardFlex = forwardRef((props, ref) => {\n  const chakraProps = Object.fromEntries(\n    // do not pass framer props to DOM element\n    Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n  );\n  return <Flex ref={ref} {...chakraProps} />;\n});\nexport const MotionFlex = motion(ForwardFlex);\n\nconst ForwardImage = forwardRef((props, ref) => {\n  const chakraProps = Object.fromEntries(\n    // do not pass framer props to DOM element\n    Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n  );\n  return <Image ref={ref} fallbackSrc={placeholder} {...chakraProps} />;\n});\nexport const MotionImage = motion(ForwardImage);\nexport const MotionText = motion(\n  forwardRef((props, ref) => {\n    const chakraProps = Object.fromEntries(\n      // do not pass framer props to DOM element\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n    );\n    return <Text ref={ref} {...chakraProps} />;\n  })\n);\n\nexport const MotionList = motion(\n  forwardRef((props, ref) => {\n    const chakraProps = Object.fromEntries(\n      // do not pass framer props to DOM element\n      Object.entries(props).filter(([key]) => !isValidMotionProp(key))\n    );\n    return <List ref={ref} {...chakraProps} />;\n  })\n);\n","import { PropsWithChildren } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\ninterface Props {\n  color: string;\n  h?: string;\n  zIndex?: number;\n}\nconst UnderlinedText = (props: PropsWithChildren<Props>) => (\n  <Box as=\"span\" display=\"inline-block\" position=\"relative\">\n    {props.children}\n    <Box\n      as=\"span\"\n      display=\"block\"\n      position=\"absolute\"\n      bg={\"gray.200\"}\n      w={\"100%\"}\n      h={props.h || \"1px\"}\n      bottom={-2}\n    />\n  </Box>\n);\nexport default UnderlinedText;\n","import { Box, BoxProps } from \"@chakra-ui/react\";\nimport { PropsWithChildren } from \"react\";\nimport UnderlinedText from \"./Underline\";\n\ninterface Props extends BoxProps {\n  underlineColor: string;\n  emoji?: string;\n}\n\nconst HeaderTitle = ({\n  children,\n  underlineColor,\n  emoji,\n  ...props\n}: PropsWithChildren<Props>) => (\n  <Box\n    as=\"h1\"\n    mt={10}\n    mb={6}\n    fontSize=\"3xl\"\n    lineHeight=\"shorter\"\n    fontWeight=\"bold\"\n    {...props}\n    textAlign=\"left\"\n  >\n    <UnderlinedText color={underlineColor}>{children}</UnderlinedText>\n    {emoji ? \" \" + emoji : \"\"}\n  </Box>\n);\nexport default HeaderTitle;\n","import crypto from \"../assets/images/projects/crypto.png\";\nimport blog from \"../assets/images/projects/blog.jpeg\";\nimport carsharing from \"../assets/images/projects/carsharing.png\";\nimport admin from \"../assets/images/projects/adminpanel.jpeg\";\nimport soccer from \"../assets/images/projects/soccer.png\";\nexport interface IProject {\n  id: number;\n  title: string;\n  logo: string;\n  link: string;\n  desc: string;\n  technologies: string[];\n}\nexport const projectsList: IProject[] = [\n  {\n    id: 1,\n    title: \"Crypto info\",\n    logo: crypto,\n    link: \"https://github.com/GalichAnton/Crypto\",\n    desc: `SPA for collecting and displaying information about cryptocurrencies`,\n    technologies: [\"react\", \"javascript\", \"redux\"],\n  },\n  {\n    id: 2,\n    title: \"Blog app\",\n    link: \"https://github.com/GalichAnton/Blog\",\n    logo: blog,\n    desc: `An application, a blog where the user can add, update, delete posts and leave comments under them.`,\n    technologies: [\"react\", \"redux\", \"typescript\", \"express\"],\n  },\n  {\n    id: 3,\n    title: \"Carsharing app\",\n    logo: carsharing,\n    link: \"https://github.com/GalichAnton/carsharing\",\n    desc: `An application that allows you to book a car from the available order points marked on the map`,\n    technologies: [\"react\", \"typescript\", \"redux/toolkit\", \"maps api\"],\n  },\n  {\n    id: 4,\n    title: \"Admin panel for carsharing\",\n    logo: admin,\n    link: \"https://github.com/GalichAnton/CarsharingAdmin\",\n    desc: `Admin panel for carsharing app with full CRUD operations for system entries`,\n    technologies: [\"react\", \"typescript\", \"redux/toolkit/saga\"],\n  },\n  {\n    id: 5,\n    title: \"SoccerStat\",\n    logo: soccer,\n    link: \"https://github.com/GalichAnton/SoccerStat\",\n    desc: `Application for viewing statistics of football competitions`,\n    technologies: [\"react\", \"typescript\", \"redux/toolkit\"],\n  },\n];\n"],"names":["LocalPaths","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","useSound","lightswitch","volume","sprite","on","off","play","label","size","fontSize","variant","color","marginLeft","onClick","id","icon","_hover","bg","webLinks","name","path","about","projects","mobileLinks","techStack","interesting","NavLink","as","RouterNavLink","px","py","rounded","textDecoration","_activeLink","onClose","to","children","Header","useDisclosure","isOpen","onOpen","menuProps","boxShadow","h","alignItems","justifyContent","w","maxW","mx","display","spacing","src","UserIcon","base","md","map","link","index","isLazy","Button","height","_expanded","_focus","rightIcon","zIndex","style","margin","AiTwotoneThunderbolt","MdTimeline","achievements","BsCheckCircle","Link","href","justifySelf","pb","copyright","Date","getFullYear","author","accounts","url","type","iconProps","isRound","isInline","pt","flexDirection","flexFlow","justify","textAlign","myConfig","sc","isExternal","colorScheme","DottedSvgs","position","width","overflow","left","className","styles","fill","viewBox","x","y","patternUnits","right","title","description","logo","technologies","textColor","React","setIsOpen","motion","layout","p","borderWidth","borderColor","align","cursor","shadow","fontWeight","noOfLines","e","stopPropagation","tech","i","getTagColor","AnimatePresence","initial","opacity","animate","exit","variants","transition","staggerChildren","HeaderTitle","underlineColor","mt","mb","AnimateSharedLayout","columns","project","Motion","whileHover","desc","ANIMATION_DURATION","direction","translateX","duration","m","ml","emoji","whiteSpace","translateY","delay","padding","borderLeft","backgroundColor","paddingLeft","devStory","projectsList","location","useLocation","pathname","ProjectsPage","lazy","AboutPage","TechStack","AchievementPage","LinksPage","element","ForwardBox","forwardRef","ref","chakraProps","Object","fromEntries","entries","filter","key","isValidMotionProp","MotionBox","ForwardFlex","MotionFlex","ForwardImage","fallbackSrc","MotionText","MotionList","bottom","lineHeight","Underline"],"sourceRoot":""}